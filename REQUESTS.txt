https://www.pgexercises.com/questions/basic/

1. Retrieve everything from a table

	SELECT
		*
	FROM 
		cd.facilities

2. Retrieve specific columns from a table

	SELECT 
		name, membercost
	FROM
		cd.facilities

3. Control which rows are retrieved

	SELECT 
		* 
	FROM 
		cd.facilities
	WHERE
		membercost > 0

4. Control which rows are retrieved - part 2

	SELECT
		facid, name, membercost, monthlymaintenance  
	FROM
		cd.facilities 
	WHERE
		membercost < monthlymaintenance / 50 
	AND
		membercost > 0

5. Basic string searches

	SELECT 
		*
	FROM
		cd.facilities
	WHERE 
		name LIKE'%Tennis'
	OR 
		name LIKE'Tennis%'

6. Matching against multiple possible values

	SELECT
		* 
	FROM 
		cd.facilities
	WHERE
		facid in (1,5)

7. Classify results into buckets

	SELECT
		name,
	CASE WHEN 
		(monthlymaintenance > 100) 
	THEN
		'expensive'
	ELSE
		'cheap'
	END as cost
	FROM
		cd.facilities;   

8. Working with dates

	SELECT
		memid, surname, firstname, joindate
	FROM
		cd.members
	WHERE
		joindate >= '2012-09-01'

9. Removing duplicates, and ordering results

	SELECT distinct 
		surname
	FROM 
		cd.members
	order by surname
	FETCH FIRST 10 ROWS ONLY

10. Combining results from multiple queries

	SELECT
		name
	from
		cd.facilities
	union
	select 
		surname
	from
		cd.members

11. Simple aggregation

	SELECT
		joindate
	FROM
		cd.members
	WHERE
		joindate IN (SELECT max(joindate) FROM cd.members);

12. More aggregation

	SELECT 
		firstname, surname, joindate FROM cd.members
	WHERE 
		joindate
 	IN (SELECT max(joindate) FROM cd.members);


https://www.pgexercises.com/questions/joins/

1. Retrieve the start times of members' bookings

	SELECT 
		booking.starttime 
	FROM
		cd.bookings booking
	inner join cd.members members
		on members.memid = booking.memid
	WHERE 
		members.firstname='David' 
		and members.surname='Farrell';  


2. Work out the start times of bookings for tennis courts

	SELECT 
		bookings.starttime as start, facilities.name as name
	FROM
		cd.facilities facilities
		inner join cd.bookings bookings
			on facilities.facid = bookings.facid
	WHERE 
		facilities.name in ('Tennis Court 1', 'Tennis Court 2') and
		bookings.starttime >= '2012-09-21' and
		bookings.starttime < '2012-09-22'
	order by bookings.starttime;   

3. Produce a list of all members who have recommended another member

	SELECT distinct
		recs.firstname as firstname, rec.surname as surname
	FROM
		cd.members members
		inner join cd.members rec
			on rec.memid = members.recommendedby
	order by surname, firstname; 

4. Produce a list of all members, along with their recommender

	SELECT 
		mems.firstname as memfname, mems.surname as memsname, recs.firstname as recfname, recs.surname as recsname
	FROM
		cd.members mems
		left outer join cd.members recs
			on recs.memid = mems.recommendedby
	order by memsname, memfname;    
